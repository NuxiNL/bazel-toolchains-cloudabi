--- src/math/atanl.c
+++ src/math/atanl.c
@@ -70,21 +70,21 @@ static long double T_odd(long double x)
 #elif LDBL_MANT_DIG == 113
 #define EXPMAN(u) ((u.i.se & 0x7fff)<<8 | u.i.top>>8)
 
-const long double atanhi[] = {
+static const long double atanhi[] = {
 	 4.63647609000806116214256231461214397e-01L,
 	 7.85398163397448309615660845819875699e-01L,
 	 9.82793723247329067985710611014666038e-01L,
 	 1.57079632679489661923132169163975140e+00L,
 };
 
-const long double atanlo[] = {
+static const long double atanlo[] = {
 	 4.89509642257333492668618435220297706e-36L,
 	 2.16795253253094525619926100651083806e-35L,
 	-2.31288434538183565909319952098066272e-35L,
 	 4.33590506506189051239852201302167613e-35L,
 };
 
-const long double aT[] = {
+static const long double aT[] = {
 	 3.33333333333333333333333333333333125e-01L,
 	-1.99999999999999999999999999999180430e-01L,
 	 1.42857142857142857142857142125269827e-01L,
--- src/math/fma.c
+++ src/math/fma.c
@@ -69,7 +69,7 @@ double fma(double x, double y, double z)
 	if (d > 0) {
 		if (d < 64) {
 			zlo = nz.m<<d;
-			zhi = nz.m>>64-d;
+			zhi = nz.m>>(64-d);
 		} else {
 			zlo = 0;
 			zhi = nz.m;
@@ -77,7 +77,7 @@ double fma(double x, double y, double z)
 			d -= 64;
 			if (d == 0) {
 			} else if (d < 64) {
-				rlo = rhi<<64-d | rlo>>d | !!(rlo<<64-d);
+				rlo = rhi<<(64-d) | rlo>>d | !!(rlo<<(64-d));
 				rhi = rhi>>d;
 			} else {
 				rlo = 1;
@@ -90,7 +90,7 @@ double fma(double x, double y, double z)
 		if (d == 0) {
 			zlo = nz.m;
 		} else if (d < 64) {
-			zlo = nz.m>>d | !!(nz.m<<64-d);
+			zlo = nz.m>>d | !!(nz.m<<(64-d));
 		} else {
 			zlo = 1;
 		}
@@ -122,7 +122,7 @@ double fma(double x, double y, double z)
 		e += 64;
 		d = a_clz_64(rhi)-1;
 		/* note: d > 0 */
-		rhi = rhi<<d | rlo>>64-d | !!(rlo<<d);
+		rhi = rhi<<d | rlo>>(64-d) | !!(rlo<<d);
 	} else if (rlo) {
 		d = a_clz_64(rlo)-1;
 		if (d < 0)
@@ -173,7 +173,7 @@ double fma(double x, double y, double z)
 		} else {
 			/* only round once when scaled */
 			d = 10;
-			i = ( rhi>>d | !!(rhi<<64-d) ) << d;
+			i = ( rhi>>d | !!(rhi<<(64-d)) ) << d;
 			if (sign)
 				i = -i;
 			r = i;
